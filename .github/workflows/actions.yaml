name: Lint + Deploy
on: [push]
jobs:
  lint-server:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - name: update npm
        run: |
          npm i -g npm
      - name: npm install and run lint
        run: |
          cd backend
          npm ci
          npm run lint

  build-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Build Frontend
        run: |
          cd frontend
          npm i -g npm
          npm ci
          npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/build

  build-server:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      # TODO: Use a proper secrets manager to store database passwords and api tokens
      - name: Install dependecies to Backend
        run: |
          cd backend
          npm i -g npm
          npm ci
      - name: Build server
        run: |
          cd backend
          npm i -g npm
          npm ci
          npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: server-dist
          path: backend/dist

  # migrate:
  #   env:
  #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 15
  #   needs: [lint-server]
  #   if: github.ref == 'refs/heads/master'
  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'
  #   # Note: these steps are split out so that the logs appear separately for each one
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #         cache: 'npm'
  #         cache-dependency-path: backend/package-lock.json
  #     - name: update npm
  #       run: |
  #         npm i npm
  #     - name: npm install
  #       run: |
  #         cd backend
  #         npm ci
  #     - name: run migrations
  #       run: |
  #         cd backend
  #         npx knex migrate:latest --knexfile ./knexfile.ts --env production

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build-frontend, build-server]
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: server-dist
          path: backend/dist
      - uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: backend/public
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          cd backend
          flyctl deploy --remote-only

